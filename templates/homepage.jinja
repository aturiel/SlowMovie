{% macro cleanMovieName(name) -%}
{{name | replace("_", " ") | replace(".mp4", "")}}
{%- endmacro -%}

{% macro runningTime(time, style) -%}
<span 
{% if style != null %}
    style="{{style}}" 
{% endif %}
class="sm-total-running-time"><b>Running time</b> {{time}}</span>
{%- endmacro -%}

{% macro currentFrameImage() %}
<div class="card-image">
    {# generate a random id so the current image is not cached #}
    <img class="responsive-img"
        src="frame/current.jpg?dummy={{ range(1,999) | random }}" alt="current displayed frame"> 
    <span class="card-title">{{cleanMovieName(smPlayer.movie)}}</span>
</div>
{% endmacro %}

{% macro frameImage(img, id) %}
<div class="card-image">
    {# generate a random id so the current image is not cached #}
    <img class="responsive-img"
        src="frame/{{img}}" alt="favorite frame image"> 
    <span class="card-title">{{id}}</span>
</div>
{% endmacro %}


<!DOCTYPE html>
<html>
<head>
    <!-- https://materializecss.com -->
    <title>Slow Movie</title>
    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <!-- Material icons -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <!-- Place this tag in your head or just before your close body tag. -->
    <script async defer src="https://buttons.github.io/buttons.js"></script>  
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        .sm-movies h3 {
            padding-top: 0.5ex;
            padding-bottom: 0.5ex;
        }
        .sm-submit {
            margin-top: 2ex;
        }
        .sm-general-settings {
            padding-bottom: 3ex;
        }
        .sm-general-settings .row {
            margin-bottom: 5px;
        }
        .sm-general-settings-inputs .input-field {
            padding-bottom: 0;
            margin-bottom: 0;
        }
        .sm-general-settings-inputs .input-field input {
            padding-bottom: 0;
            margin-bottom: 0.2em;
        }
        .sm-random.input-field label {
            left:45%;
        }
        .input-field input {
            text-align: center;
        } 
        .sm-general-settings-labels {
            color:#607d8b /* blue-grey */
        }
        .sm-general-settings-labels div {
            text-align: center;
        }
        .card .card-image .card-title {
            font-weight: 500;
            font-size: 300%;
            padding-bottom: 4px;
        }
        .sm-frame-image .card-action label>span {
            padding-left: 2em;
        }
        .sm-card-action {
            float: right;
            margin-top: -4px;
            margin-left: 2em;
        }
        .sm-movie {
            padding: 1em 1em 0em 1em;
            margin-bottom: 0;
        }
        .sm-movie:first-of-type {
            border-radius: 4px 4px 0 0;
        }
        .sm-movie:last-of-type {
            margin-bottom: 2em;
            border-radius: 0 0 4px 4px;
        }
        .sm-movie.odd {
            background-color: #eceff1;  /* blue-grey lighten-5 */
        }
        .sm-movie.even {
            background-color: #cfd8dc;  /* blue-grey lighten-4 */
        }
        .sm-movie-title {
            text-align: right;
            margin-bottom: 1ex;
        }
        .sm-movie-title>label>span {
            font-size:2rem !important;
            color: #004d40; /* teal darken-4 */
        }
        /* Radios of the right */
        .sm-movie-title [type="radio"]+span:before, 
        .sm-movie-title [type="radio"]+span:after {
            right:0;
            left: auto;
        }
        .sm-movie-title [type="radio"]:not(:checked)+span, 
        .sm-movie-title [type="radio"]:checked+span {
            padding-right: 1em;
            padding-left: 0;
        }
        /*.sm-fav-button  {
            text-align: right;
            padding-right: 0em;
            margin-bottom: 1ex;
        }*/
        .sm-movie-current-time input[type=text]:not(.browser-default){
            height:2rem;
            width: 7em;
            color:#37474f; /* blue-grey darken-3 */
        }
        .sm-movie-current-time label {
            color:#546e7a; /* blue-grey darken-1 */
        }
        .sm-movie-favs {
            margin-top: 3ex;
        }
        .sm-movie-favs a {
            background-color: #ff5722 ;/* deep-orange */
            border-radius: 8px;
            color: white;
            padding: 0.3em 0.8em 0.4em 0.8em;
            margin-left: 0.5em;
        }
        .sm-total-running-time {
            color:#90a4ae; /* blue-grey lighten-2 */
        }
        .sm-frame {
            padding: 0 !important;
            margin: 0;
        }
        .sm-frame img {
            max-width: 100%;
            max-height: 100%;
            border-radius: 4px;
        }
        .sm-frame-image, 
        .sm-frame-image .card,
        .sm-frame-image .card-action > .row {
            margin-bottom: 0;
        }
        .sm-movie-favs, 
        .sm-total-running-time,
        .sm-frame-image .card-action label span {
            font-size: 0.8rem; 
        }

        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(55, 71, 79); /* Fallback color #37474f blue-grey darken-3 */
            background-color: rgba(55, 71, 79,0.8); /* Black w/ opacity */
            max-height: 100%;
        }

        /* Modal Content */
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        /* The Close Button */
        .row.sm-frame-image {
            position: relative;
        }
        .modal-btn-close {
            position: absolute;
            top: -16px;
            right: -16px;
        }
    
    </style>
</head>

<body onload="init();"">
    <div class="container">
        <div class="row sm-title">
            <div class="col s12">
                <h2 class="center-align">Very Slow Movie Player</h2>
            </div>
        </div>

        <div class="row sm-general-settings z-depth-2">
            <form action="/form/general" class="col s12" method="post" enctype="application/x-www-form-urlencoded">
                <div class="row sm-general-settings-inputs">
                    <div class="sm-random input-field col s4 m2">
                        <label>
                            <input type="checkbox" class="filled-in" id="random" name="random" value="random" 
                                {% if smData.random == true %}
                                    checked="checked" 
                                {% endif %} />
                            <span></span>
                        </label>
                    </div>
                    <div class="sm-increment input-field col offset-s2 s2 offset-m2 m2 offset-l3 l1">
                        <input placeholder="Seconds" type="number" class="validate" id="increment" name="increment" value="{{smData.increment}}"/>
                    </div>
                    <div class="sm-delay input-field col offset-s2 s2 offset-m3 m2 offset-l4 l1">
                        <input placeholder="Seconds" type="number" class="validate" id="delay" name="delay" value="{{smData.delay}}"/>
                    </div>
                </div>
                <div class="row sm-general-settings-labels">
                    <div class="sm-random col s4 m2">
                        <span>Chooses a random frame every refresh</span>
                    </div>

                    <div class="sm-increment col s4 offset-m1 m4 offset-l2 l3">
                        <span>Number of frames skipped between screen updates</span>
                    </div>
                    <div class="sm-delay col s4 offset-m1 m4 offset-l2 l3">
                        <span>Delay between screen updates</span>
                    </div>
                </div>
                <div class="row center-align">
                    <button class="sm-submit btn waves-effect waves-light" type="submit" name="action">
                        Update General Settings<i class="material-icons right">send</i>
                    </button>
                </div>
            </form>
        </div>

        <div class="row sm-frame-image">
            <div class="card">
                {{ currentFrameImage() }}

                <div class="card-action">
                    <label>
                        <input type="checkbox" class="auto-refresh" id="auto-refresh" 
                            {% if smData.random == true %}
                                checked="checked" 
                            {% endif %} />
                        <span><b>Auto refresh</b></span>
                    </label>
                    <label>{{runningTime(smPlayer.time)}}</label>
                    <label>
                        <span class="last-updated"><b>Updated</b> <span id='last-update'></span> secs. ago</span>
                    </label>
                    <a class="sm-card-action btn-floating btn-small waves-effect waves-light deep-orange"
                        id="modal-current-frame-fav-btn-open">
                        <i class="material-icons">favorite</i>
                    </a>
                </div>
            </div>
        </div>

        <div class="row sm-movies z-depth-2">
            <h3 class="center-align">Movies</h3>
            <form action="/form/movies" class="col s12" method="post" enctype="application/x-www-form-urlencoded">
                {% for key, value in smData.movies.items() %}
                    <div class="row sm-movie {{ loop.cycle('odd', 'even') }}
                        {% if key == smData.movie %}z-depth-5{% endif %}">
                        <div class=" col s7 m8 l10">
                            <div class="row sm-movie-title">
                                <label>
                                    <input type="radio" id="{{key}}" name="movie" value="{{key}}" 
                                        {% if key == smData.movie %}
                                            checked="checked" 
                                        {% endif %} 
                                    />
                                    <span>{{key | replace("_", " ") | replace(".mp4", "") }}</span>
                                </label>
                            </div>
                            {% if value.favorites %}
                                <div class="row right-align sm-movie-favs">
                                    {% for favName, fav in value.favorites.items() %}
                                        <a id="modal:{{key}}:{{favName}}:btn-open">{{favName}}</a>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="sm-movie-current-time input-field col s5 m4 l2">
                            <input placeholder="hh:mm:ss.SSS" type="text" class="validate" id="current_{{key}}" name="current_{{key}}" value="{{value.currentTime}}">
                            <label for="current_{{key}}">Displayed frame</label>
                            {{runningTime(value.totalTime, "display: block;")}}
                        </div>
                    </div>
                {% endfor %}
                <div class="row center-align">
                    <button class="sm-submit btn waves-effect waves-light" type="submit" name="action">
                        Update Movies Settings<i class="material-icons right">send</i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <footer class="page-footer">
        <div class="footer-copyright">
            <div class="container">
                <div class="row">
                    <div class="col s5 offset-s1 valign-wrapper">
                        Very Slow Movie Player
                    </div>
                    <div class="col s6 right-align">
                        <a class="github-button right" href="https://github.com/aturiel/SlowMovie" data-size="large" aria-label="Star aturiel/SlowMovie on GitHub">Star</a>
                    </div>
                </div>
            </div>
    </footer>

    <!-- The current favorite Modals -->
    <div id="modal-current-frame-fav" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="row sm-frame-image">
                <a id ="modal-current-frame-fav-btn-close" 
                    class="modal-btn-close btn-floating btn-small waves-effect waves-light blue-grey">
                    <i class="material-icons">close</i>
                </a>
                <div class="card">
                    {{ currentFrameImage() }}

                    <div class="card-action">
                        <div class="row valign-wrapper">
                            <div class="col s3 center-align">
                                <span class='sm-current-frame-time'>{{runningTime(smPlayer.time)}}</span>
                            </div>
                            <div class="col s2 center-align">
                                <span class='sm-current-frame-time'>
                                    <label><b>Frame</b><br/>{{smPlayer.frame}}</label>
                                </span>
                            </div>
                            <div class="col s5">
                                <input placeholder="type name.." type="text" class="validate" id="fav_frame_id" name="fav_frame_id">
                                <label for="fav_frame_id">Favorite name</label>
                            </div>
                            <div class="col ofsset-s1 s1">
                                <div class="row right-align valign-wrapper">
                                    <a id= "modal-current-frame-fav-btn-add" 
                                        class="btn-floating btn-small waves-effect waves-light green">
                                        <i class="material-icons">add</i>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div id="sm-error-msg" class="row">
                            <span class="new badge red" data-badge-caption="Can't save favorite frame"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- All  favorite Modals -->
    {% for key, value in smData.movies.items() %}
        {% if value.favorites %}
            {% for favName, fav in value.favorites.items() %}
                <div id="modal:{{key}}:{{favName}}" class="modal">
                    <!-- Modal content -->
                    <div class="modal-content">
                        <div class="row sm-frame-image">
                            <a id ="modal:{{key}}:{{favName}}:btn-close" 
                                class="modal-btn-close btn-floating btn-small waves-effect waves-light blue-grey">
                                <i class="material-icons">close</i>
                            </a>
                            <div class="card">
                                {{ frameImage(fav.img, favName) }}
                                <div class="card-action">
                                    <label><b>Movie</b>: {{cleanMovieName(key)}}</label>
                                    <label><b>Time</b>: {{fav.time}}</label>
                                    <a class="sm-card-action btn-floating btn-small waves-effect waves-light blue"
                                        id="modal:{{key}}:{{favName}}:btn-activate">
                                        <i class="material-icons">visibility</i>
                                    </a>
                                    <a class="sm-card-action btn-floating btn-small waves-effect waves-light red"
                                        id="modal:{{key}}:{{favName}}:btn-delete">
                                        <i class="material-icons">delete</i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}
        {% endif %}
    {% endfor %}


    <!-- Compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script type="text/javascript"> 
        function init() {
            // restore "auto refresh" value from local storasge
            var autoRefresh = document.getElementById("auto-refresh");

            if(localStorage.getItem("auto-refresh")) {
                autoRefresh.checked = true;
            }

            //sync local storage and check value
            autoRefresh.onclick = function () {
                console.info("auto-refresh " + autoRefresh.checked); 
                if (autoRefresh.checked) {
                    localStorage.setItem("auto-refresh", true);
                } else {
                    localStorage.removeItem("auto-refresh");
                }
            };

            // update "frame secs. ago" and "auto refresh""
            display_lastUpdate();

            // modal-current-frame-fav
            activate_current_frame_modal();

            // modal favorites
            activate_favorites_modals();
        }

        function display_l(){
            var refresh=1000; // Refresh rate in milli seconds
            mytime=setTimeout('display_lastUpdate()',refresh)
        }

        function display_lastUpdate() {
            var displayed = new Date("{{ smPlayer.when | replace(" ", "T")}}").getTime();
            var now = new Date().getTime();
            var secs = Math.round((now - displayed) / 1000);
            document.getElementById('last-update').innerHTML = secs;
            display_l();

            if(localStorage.getItem("auto-refresh") && secs > {{smData.delay}})  {
                location.reload();
            }
        }

        function activate_favorites_modals() {
            {% set count = namespace(value=0) %}
            {% for key, value in smData.movies.items() %}
                {% if value.favorites %}
                    {% for favName, fav in value.favorites.items() %}
                        // Get the modal
                        var modal_{{count.value}} = document.getElementById("modal:{{key}}:{{favName}}");

                        // Get the buttons that handle the modal and fav frame
                        var open_{{count.value}} = document.getElementById("modal:{{key}}:{{favName}}:btn-open");
                        var close_{{count.value}} = document.getElementById("modal:{{key}}:{{favName}}:btn-close");
                        var delete_{{count.value}} = document.getElementById("modal:{{key}}:{{favName}}:btn-delete");
                        var activate_{{count.value}} = document.getElementById("modal:{{key}}:{{favName}}:btn-activate");

                        // When the user clicks the button, open the modal 
                        open_{{count.value}}.onclick = function() {
                            modal_{{count.value}}.style.display = "block";
                        }

                        // When the user clicks on (x), close the modal
                        close_{{count.value}}.onclick = function() {
                            modal_{{count.value}}.style.display = "none";
                        }

                        {% set count.value = count.value + 1 %}
                    {% endfor %}
                {% endif %}
            {% endfor %}
        }

        function activate_current_frame_modal() {
            var modalTimeout = null;

            // Get the modal
            var modal = document.getElementById("modal-current-frame-fav");

            // Get the button that opens the modal
            var open = document.getElementById("modal-current-frame-fav-btn-open");

            // Get the element that closes the modal
            var close = document.getElementById("modal-current-frame-fav-btn-close");

            // Get the element that add favorite
            var add = document.getElementById("modal-current-frame-fav-btn-add");
            add.style.visibility = 'hidden';

            // Get the element that print the error
            var errorElement = document.getElementById("sm-error-msg");
            errorElement.style.visibility = 'hidden';

            // Get the element that contains frame ID
            var frameId = document.getElementById("fav_frame_id");

            // When the user clicks the button, open the modal 
            open.onclick = function() {
                modal.style.display = "block";
                modalTimeout = setInterval(function(){ 
                    add.style.visibility = frameId.value ? 'visible' : 'hidden';
                }, 100);
            }

            // When the user clicks on (x), close the modal
            close.onclick = function() {
                clearTimeout(modalTimeout);
                modal.style.display = "none";
            }

            // ...
            add.onclick = function() {
                var favData = { 
                    name: '{{smPlayer.movie}}',
                    frame: {{smPlayer.frame}},
                    id: frameId.value
                };

                fetch("/favorite", createRequestOptions(favData))
                .then(response => response.text())
                .then(result => {
                        location.reload();
                    }
                )
                .catch(error => {
                        console.log('error', error);
                        errorElement.style.visibility = 'visible';
                    }
                );
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        }

        function createRequestOptions(data) {
            var raw = JSON.stringify(data);
            //console.log("Add fav >>> " + raw);

            var myHeaders = new Headers();
            myHeaders.append("Content-Type", "text/plain");

            return requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };
        }
    </script>
</body>
</html>
